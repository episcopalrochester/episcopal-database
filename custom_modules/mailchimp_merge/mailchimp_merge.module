<?php
/**
 * Implementation of hook_menu
 */

function mailchimp_merge_menu() {
    $items = array();
    $items['staff/merge'] = array(
      'title' => 'Mailchimp Merge',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('mailchimp_merge_form'),
      'access arguments' => array('access people listing'),
      'weight' => 10,
      'type' => MENU_LOCAL_TASK,
    );
    return $items;
}

function mailchimp_merge_form($form,&$form_state) {
  $cache = variable_get("mm_subscribe_merge",false);
  if ($cache) {
    $form['progress'] = array(
      '#title' => 'Merge in Progress',
      '#type' => 'item',
      '#markup' => 'Mailchimp merge in progress. '.count($cache)." more record(s) to merge.",
    );
    $form['reset'] = array(
      '#type' => 'submit',
      '#value' => 'Reset and begin new merge',
      '#submit' => array('mailchimp_merge_reset'),
    );
  }
  else {
    $form['progress'] = array(
      '#title' => 'Merge not in progress',
      '#type' => 'item',
      '#markup' => 'Mailchimp merge not started.',
    );
    $form['reset'] = array(
      '#type' => 'submit',
      '#value' => 'Begin new merge',
      '#submit' => array('mailchimp_merge_reset'),
    );
  }
  return $form;
}

function mailchimp_merge_reset() {
  variable_del("mm_subscribe_merge");
  mailchimp_merge_prepare_batch();
}

function mailchimp_merge_prepare_batch() {
  $subscribe_merge = variable_get("mm_subscribe_merge",false);
  $cache = array();
  if (!$subscribe_merge) {
    $people = person_fetch_people();
    foreach ($people['nodes'] as $person) {
      $id = '9bae7a5861';
      $email = person_get_email($person,"pref");
      $email = $email['addy'];
      if ($email) {

        $internal = array();
        if (person_is_clergy($person)) {
          $internal[] = "All Clergy";
        }
        if (person_is_warden($person)) {
          $internal[] = "Wardens";
        }
        if (person_is_treasurer($person)) {
          $internal[] = "Treasurers";
        }
        if (person_is_clergy_in_cong($person)) {
          $internal[] = "Clergy in Congregations";
        }
        if (person_is_staff($person)) {
          $internal[] = "Bishop's Staff";
        }
        if (person_is_admin($person)) {
          $internal[] = "Parish Administrators";
        }
        if (person_is_survivor($person)) {
          $internal[] = "Surviving Spouses";
        }
        if (isset($cache[$email])) {
          $internal = array_merge($internal,$cache[$email]['merge_vars']['GROUPINGS'][0]['groups']);

        }
        $merge_vars = array(
          'GROUPINGS' => array(
            array(
              'id' => '8737',
              'groups' => array_values($internal),
            ),
          ),
        );
        $cache[$email] = array(
          'email' => $email,
          'merge_vars' => $merge_vars,
        );
      }
    }
    variable_set("mm_subscribe_merge",$cache);

  }

}

function mailchimp_merge_run_batch() {
  $cache = variable_get("mm_subscribe_merge",false);
  if ($cache) {
    $n = 0;
    while ($n < 50) {
      $row = array_shift($cache);
      $memberinfo = mailchimp_get_memberinfo('9bae7a5861', $row['email']);
      $external = array();
      if (isset($memberinfo['merges']['GROUPINGS'])) {
        foreach ($memberinfo['merges']['GROUPINGS'] as $grouping) {
          if ($grouping['id'] == "8725") {
            foreach ($grouping['groups'] as $group) {
              if ($group['interested'] == true) {
                $external[] = $group["name"];
              }
            }
          }
        }
        $row['merge_vars']['GROUPINGS'][] = array(
          'id' => "8725",
          'groups' => array_values($external),
        );
      }
      mailchimp_subscribe(
        '9bae7a5861',
        $row['email'],
        $row['merge_vars'],
        FALSE,
        FALSE,
        'html',
        TRUE,
        TRUE
      );
      $n++;
    }
    variable_set("mm_subscribe_merge",$cache);
  }
}
