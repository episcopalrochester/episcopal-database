<?php
/**
 * @file
 * Code for the Personal Relationships feature.
 */

include_once 'personal_relationships.features.inc';

function find_relationships($types = FALSE, $person,$inactive = FALSE) {
  $query = db_select("node","n");
  $query->leftJoin("field_data_field_pr_first","f","f.entity_id = n.nid");
  $query->leftJoin("field_data_field_pr_second","s","s.entity_id = n.nid");
  $query->leftJoin("field_data_field_pr_type","t","t.entity_id = n.nid");
  $query->leftJoin("field_data_field_pr_start","p","p.entity_id = n.nid");
  $query->leftJoin("field_data_field_pr_end","e","e.entity_id = n.nid");
  $query->leftJoin("field_data_field_pr_end_reason","r","r.entity_id = n.nid");
  $query->fields('n',array('nid'))
    ->fields('t',array('field_pr_type_value'))
    ->fields('f',array('field_pr_first_nid'))
    ->fields('s',array('field_pr_second_nid'))
    ->fields('p',array('field_pr_start_value'))
    ->fields('e',array('field_pr_end_value'))
    ->fields('r',array('field_pr_end_reason_value'));
  if ($types) {
    $or = db_or();
    foreach ($types as $type) {
      $or->condition('t.field_pr_type_value',$type);
    }
    $query->condition($or);
  }
   $query->condition(db_or()->condition('f.field_pr_first_nid',$person->nid)->condition('s.field_pr_second_nid',$person->nid))
    ->condition('n.status', 1);
  if (!$inactive) {
    $inactive_or = db_or();
    $and_1 = db_and();
    $and_1->isNull('e.field_pr_end_value');
    $and_1->isNull('r.field_pr_end_reason_value');
    $and_2 = db_and();
    $and_2->condition('e.field_pr_end_value',date("Y-m-d")."T00:00:00",">");
    $inactive_or->condition($and_1);
    $inactive_or->condition($and_2);
    $query->condition($inactive_or);
  }
  $result = $query->execute();
  if (!$result) {
    return false;
  }
  $relationships = array();
  while ($record = $result->fetchAssoc()) {
    $relationship = array('type'=>$record['field_pr_type_value']);
    $relationship['start'] = "";
    if ($record['field_pr_start_value']) {
      $relationship['start'] = _date_to_human($record['field_pr_start_value']);
    }
    $relationship['end'] = "";
    if ($record['field_pr_end_value']) {
      $relationship['end'] = _date_to_human($record['field_pr_end_value']);
    }
    $relationship['end_reason'] = "";
    if ($record['field_pr_end_reason_value']) {
      $relationship['end_reason'] = $record['field_pr_end_reason_value'];
    }
    $relationship['node'] = node_load($record['nid']);
    if ($person->nid == $record["field_pr_first_nid"]) {
      $relationship['relative'] = node_load($record['field_pr_second_nid']);
    }
    elseif ($person->nid == $record['field_pr_second_nid']) {
      $relationship['relative'] = node_load($record['field_pr_first_nid']);
    }
    else {
      $relationship['relative'] = false;
    }
    if (!empty($record['field_pr_end_value']) || !empty($record['field_pr_end_reason_value'])) {
      $relationship['active'] = FALSE;
    }
    else {
      $relationship['active'] = TRUE;
    }
    $relationships[] = $relationship;
  }
  return $relationships;
}

function partnership_types() {
  return array(
    ''=>'',
    'marriage'=>'Marriage',
    'partnership'=>'Partnership',
    'cohabitate'=>'Cohabitating',
  );
}

function partnership_splits($key = FALSE) {
  $splits =  array(
    '' => '',
    "death"=>"Death",
    "divorce"=>"Divorce",
    "separation"=>"Separation",
    "other"=>"Other (see notes)",
  );
  if ($key && !empty($key)) {
    return $splits[$key];
  }
  return $splits;
}

function personal_relationships_form_personal_relationship_node_form_alter(&$form,&$form_state,$form_id) {
  $form['field_pr_type']['und']['#options'] = array_filter(partnership_types());
  if (isset($form['field_pr_type']['und']['#entity']->field_pr_type['und'][0]['value'])) {
    $form['field_pr_type']['und']['#default_value'] = $form['field_pr_type']['und']['#entity']->field_pr_type['und'][0]['value'];
  }
  $form['field_pr_end_reason']['und']['#options'] = partnership_splits();
  if (isset($form['field_pr_end_reason']['und']['#entity']->field_pr_end_reason['und'][0]['value'])) {
    $form['field_pr_end_reason']['und']['#default_value'] = $form['field_pr_end_reason']['und']['#entity']->field_pr_end_reason['und'][0]['value'];
  }
}
