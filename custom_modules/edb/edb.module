<?php
/**
 * Implementation of hook_menu
 */

function edb_menu() {
  $menu['my-data'] = array(
    'title' => "My Data",
    'description' => "Page showing user's data",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('edb_mydata_page_form'),
    'access arguments' => array ('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $menu;
}

function edb_init() {
  variable_set("site_frontpage","my-data");
  global $user;
  if (arg(1) <> "logout" && arg(0) == "user" && arg(2) <> "password" && $user->uid > 1) {
    drupal_goto("user/".$user->uid."/password");
  }
}

function edb_mydata_page_form($form,&$form_state) {
  global $user;
  $query = db_select('node','n');
  $query->leftJoin("field_data_field_editors","e","e.entity_id = n.nid");
  $query->fields('n',array('nid','type','title','changed'))
    ->condition('status','1')
    ->condition('type','person')
    ->orderBy('type','ASC')
    ->orderBy('changed','DESC');
  $or = db_or();
  $or->condition('uid',$user->uid);
  $or->condition('e.field_editors_uid',$user->uid);
  $query->condition($or);
  $result = $query->execute();
  $tables = array();
  $variables = array(
    'header' => array('Record','Last Edited'),
    'rows' => array(),
    'attributes' => array(),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => '',
  );
  while ($record = $result->fetchAssoc()) {
    if (!isset($tables[$record['type']])) {
      $type = $record['type'];
      $tables[$type] = $variables;
      $tables[$type]['caption'] = ucwords(str_replace("_"," ",$type))." Records";
    }
    $row = array(
      'data' => array(
        l($record['title'],"node/".$record['nid'],array('html'=>TRUE)),
        date('r',$record['changed']),
        ),
      );
    $tables[$type]['rows'][] = $row;
  }
  $count = 1;
  foreach ($tables as $table) {
    $form['table'.$count] = array(
      '#type' => 'item',
      '#markup' => theme_table($table),
      );
   $count++;
  }
  return $form;
}

function edb_node_access($node, $op, $account) {
  switch ($op) {
    case "view":
      if (
        in_array("database editor",$account->roles) ||
        $node->uid == $account->uid ||
        find_relationships(FALSE,$node) ||
        edb_check_editors($account->uid,$node)
      ) {
        return NODE_ACCESS_ALLOW;
      }
      return NODE_ACCESS_DENY;
      break;
    case "update":
      if (
        in_array("database editor",$account->roles) ||
        $node->uid == $account->uid ||
        edb_check_editors($account->uid,$node)
      ) {
        return NODE_ACCESS_ALLOW;
      }
      return NODE_ACCESS_DENY;
      break;
  }
}

function edb_is_admin() {
  global $user;
  if (
    in_array("database editor",$user->roles) ||
    $user->uid == 1 ||
    in_array("administrator",$user->roles)) {
    return true;
  }
  return false; 
}

function edb_check_editors($uid,$node) {
  $lang = $node->language;
  if (isset($node->field_editors[$lang])) {
    foreach ($node->field_editors[$lang] as $editor) {
      if ($uid == $editor['uid']) {
        return true;
      }
    }
  }
  return false;
}
