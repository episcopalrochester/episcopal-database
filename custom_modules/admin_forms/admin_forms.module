<?php
/**
 * @file
 * Code for the Admin Forms feature.
 */

include_once 'admin_forms.features.inc';

function admin_forms_menu() {
  $items = array();
  $items['staff/admin-forms/generate'] = array(
    'title' => 'Generate Admin Forms',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_forms_generate_form'),
    'access arguments' => array('access people listing'),
    'weight' => 20,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['staff/admin-forms/process'] = array(
    'title' => 'Process Admin Forms',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_forms_process_form'),
    'access arguments' => array('access people listing'),
    'weight' => 20,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function admin_forms_process_form($form,&$form_state) {
  $live = false;
  if (isset($form_state['clicked_button'])) {
    if ($form_state['clicked_button']['#id'] == "edit-live") {
      $live = true;
    }
  }

  if (isset($form_state['input']['year'])) {
    $date = $form_state['input']['year'];
  }
  else {
    $date = date('Y');
  }
  $form['year'] = array(
    '#type' => 'textfield',
    '#title' => 'Year of Admin Forms to Process',
    '#tree' => TRUE,
    '#default_value' => $date,
  );
  $form['dryrun'] = array(
    '#type' => 'submit',
    '#value' => 'Dry Run Processing',
  );
  $form['live'] = array(
    '#type' => 'submit',
    '#value' => 'Live Processing',
  );
  $form['#submit'] = array('admin_forms_dry_process');

  $parishes = parish_fetch_parishes();
  foreach ($parishes['nodes'] as $parish) {
    $parishes_table = array(
      'header' => array('Form Status','Sr. Warden','Jr. Warden','Treasurer'),
      'rows' => array(),
      'attributes' => array(),
      'caption' => '',
      'colgroups' => array(),
      'sticky' => FALSE,
      'empty' => '',
    );
    $name = $parish->title;
    $admin_form = admin_forms_fetch_form($parish,$date);
    if (isset($admin_form->field_admin_form_certification['und'][0]['value'])) {
      $comp = $admin_form->field_admin_form_certification['und'][0]['value'];
      if ($comp == 1) {
        $comp = "Complete";
      }
      else {
        $comp = "Incomplete";
      }
    }
    else {
      $comp = "Incomplete";
    }
    $wardens = $admin_form->field_admin_form_wardens['und'][0]['tabledata'];
    $finance =  $admin_form->field_finance_ministry['und'][0]['tabledata'];
    $row = array(
      array('data'=>array(
        '#name' => 'form-'.$parish->nid,
        '#type'=> 'item',
        '#markup' => $comp,
      )),
      array('data'=>array(
        '#name' => 'srwarden-'.$parish->nid,
        '#type'=> 'item',
        '#markup' => $wardens[1][2]." ".$wardens[1][1],
      )),
      array('data'=>array(
        '#name' => 'jrwarden-'.$parish->nid,
        '#type'=> 'item',
        '#markup' => $wardens[2][2]." ".$wardens[2][1],
      )),
      array('data'=>array(
        '#name' => 'finance-'.$parish->nid,
        '#type'=> 'item',
        '#markup' => $finance[1][2]." ".$finance[1][1],
      )),
    );
    $parishes_table['rows'][] = $row;
    $rels = find_pro_relationships(FALSE,$parish);
    $staff = array();
    foreach ($rels as $rel) {
      $person = array();
      $person['node'] = $rel['relative'];
      $person['rel'] = $rel['node'];
      $staff[$rel['type']] = $person;
    }
    $row2 = array(
      array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'<em>Current:</em>',
      )),
    );
    if (isset($staff['wardensr']['node'])) {
      $row2[] =       array('data'=>array(
        '#type'=> 'item',
        '#markup' => $staff['wardensr']['node']->title,
      ));
    }
    else {
      $row2[] =  array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'',
      ));
    }
    if (isset($staff['wardenjr']['node'])) {
      $row2[] =       array('data'=>array(
        '#type'=> 'item',
        '#markup' => $staff['wardenjr']['node']->title,
      ));
    }
    else {
      $row2[] =  array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'',
      ));
    }
    if (isset($staff['treasurer']['node'])) {
      $row2[] =       array('data'=>array(
        '#type'=> 'item',
        '#markup' => $staff['treasurer']['node']->title,
      ));
    }
    else {
      $row2[] =  array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'',
      ));
    }
    $parishes_table['rows'][] = $row2;
    $row3 = array(
      array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'<em>Matching:</em>',
      )),
    );
    $srwarden = admin_forms_match($row[1],$row2[1],$wardens[1],$staff['wardensr']['node']);
    $row3[] = array('data'=>array(
      '#type'=> 'item',
      '#markup'=> $srwarden['markup'],
    ));  
    $jrwarden =  admin_forms_match($row[2],$row2[2],$wardens[2],$staff['wardenjr']['node']);
    $row3[] = array('data'=>array(
      '#type'=> 'item',
      '#markup'=> $jrwarden['markup'],
    ));  

    $treasurer = admin_forms_match($row[3],$row2[3],$finance[1],$staff['treasurer']['node']);
    $row3[] = array('data'=>array(
      '#type'=> 'item',
      '#markup'=> $treasurer['markup'],
    ));  

    $parishes_table['rows'][] = $row3;

    $row4 = array(
      array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'<em>Proposed actions:</em>',
      )),
    );


    if ($srwarden['match']) {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'Set senior warden to '.$srwarden['match']->title.
        '<Br />'.
        'End term of '.$staff['wardensr']['node']->title,
      ),
    );
    }
    elseif ($srwarden['markup'] == "NO MATCH") {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=> 'Create record for '.$wardens[1][2]." ".$wardens[1][1].
        '<Br />'.
        '('.$wardens[1][3]." / ".$wardens[1][4].")".
        '<Br />'.
        'Set senior warden to '.$wardens[1][2]." ".$wardens[1][1].
        '<Br />'.
        'End term of '.$staff['wardensr']['node']->title,
      ),
    );
    }
    else {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=> 'n/a',
      ));
    }

    if ($jrwarden['match']) {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'Set junior warden to '.$jrwarden['match']->title.
        '<Br />'.
        'End term of '.$staff['wardenjr']['node']->title,
      ),
    );
    }
    elseif ($jrwarden['markup'] == "NO MATCH") {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=> 'Create record for '.$wardens[2][2]." ".$wardens[2][1].
        '<Br />'.
        '('.$wardens[2][3]." / ".$wardens[2][4].")".
        '<Br />'.
        'Set junior warden to '.$wardens[2][2]." ".$wardens[2][1].
        '<Br />'.
        'End term of '.$staff['wardenjr']['node']->title,
      ),
    );
    }
    else {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=> 'n/a',
      ));
    }

    if ($treasurer['match']) {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=>'Set junior warden to '.$treasurer['match']->title.
        '<Br />'.
        'End term of '.$staff['treasurer']['node']->title,
      ),
    );
    }
    elseif ($treasurer['markup'] == "NO MATCH") {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=> 'Create record for '.$finance[1][2]." ".$finance[1][1].
        '<Br />'.
        '('.$finance[1][3]." / ".$finance[1][4].")".
        '<Br />'.
        'Set treasurer to '.$finance[1][2]." ".$finance[1][1].
        '<Br />'.
        'End term of '.$staff['treasurer']['node']->title,
      ),
    );
    }
    else {
      $row4[] = array('data'=>array(
        '#type'=> 'item',
        '#markup'=> 'n/a',
      ));
    }

    $parishes_table['rows'][] = $row4;  

    $form['parish_'.$parish->nid] = array(
      '#title' => $parish->title,
      '#type' => 'item',
      '#markup' => theme_table($parishes_table)
    );
  }
  return $form;
}

function admin_forms_match($input,$current,$table,$node) {
  $markup = "";
  $match = false;
  if (trim($input['data']['#markup'])) {
    if (trim($input['data']['#markup']) == trim($current['data']['#markup'])) {
      $markup = 'Same as current';
    }
    else {
      $match = person_find_person(trim($input['data']['#markup']),$table[4]);
      if ($match) {
        if ($match == $node) {
          $markup = 'Same as current';
          unset($match);
        }
        else {
          $markup = 'Match by name or email';
        }
      }
      else {
        $markup = "NO MATCH";
      }
    }
  }
  return array('markup'=>$markup,'match'=>$match);
}

function admin_forms_dry_process($form,&$form_state) {
  $form_state['rebuild'] = TRUE;
}

function admin_forms_fetch_form($parish,$year) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'admin_form')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_admin_form_parish', 'nid', $parish->nid, '=')
    ->fieldCondition('field_admin_form_year', 'value', $year, '=')
    ->range(0, 1);
  $result = $query->execute();

  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    return node_load($nids[0]);
  } 
  return false;
}

function admin_forms_generate_form($form,&$form_state) {
  $form['year'] = array(
    '#type' => 'textfield',
    '#title' => 'Year of Admin Forms',
    '#default_value' => date('Y'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Generate Admin Forms',
  );
  $form['#submit'] = array('admin_forms_generate');
  return $form;
}

function admin_forms_generate($form,&$form_state) {
  $parishes = parish_fetch_parishes();
  foreach ($parishes['nodes'] as $parish) {
    $node = new stdClass();
    $node->bundle = "admin_form";
    $node->type = "admin_form";
    $node->language = 'und';
    node_object_prepare($node);
    $node->field_admin_form_parish = array(
      'und' => array(
        '0' => array(
          'nid' => $parish->nid,
        ),
      ),
    );
    $node->field_admin_form_year = array(
      'und' => array(
        '0' => array(
          'value' => $form_state['values']['year'],
        ),
      ),
    );
    node_save($node);
    drupal_set_message("Generated ".$node->title);
  }
}

function admin_forms_form_admin_form_node_form_alter(&$form, &$form_state, $form_id) {
  $form['actions']['submit']['#value'] = "Save & Continue"; 
  $form['actions']['delete']['#access'] = false;
  $form['actions']['exit'] = array(
    '#type' => 'submit',
    '#value' => 'Save & Exit',
    '#weight' => 20,
    '#submit' => array(
      0 => 'admin_forms_save_exit',
    ),
  );
  $form['field_admin_form_parish']['#disabled'] = true;
  $form['field_admin_form_year']['#disabled'] = true;
}

function admin_forms_save_exit($form,&$form_state) {
  node_form_submit($form, $form_state);
  drupal_goto();
}
